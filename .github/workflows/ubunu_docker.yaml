
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE_NAME: mse-mongo

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
         
      - name: create dns mapping
        shell: bash
        run: |
          sudo -- sh -c -e "echo '127.10.0.1 mongo' >> /etc/hosts";
          sudo -- sh -c -e "echo '127.0.0.1 s1.mongo.infrastructure.docker' >> /etc/hosts"; 
      - name: view host mappings
        shell: bash
        run: cat /etc/hosts
      - name: Debug
        shell: bash
        run: |
          echo "hello"
          echo ${{ github.workspace }}
      - name: Start mongo
        id: start-mongo
        shell: bash
        run: |
          pwd
          ls -al
          docker build ./Mongo -t mse_mongo
          docker network create mongo-network
          docker run --rm -d -p 127.10.0.1:27017:27017 --name mongo  --network mongo-network --add-host s1.mongo.infrastructure.docker:127.0.0.1  -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=basic mse_mongo "mongod" "--bind_ip" "localhost,mongo,s1.mongo.infrastructure.docker" "--replSet" "Workflow" "--keyFile" "/data/keyfile"
          docker inspect mongo
        
      - name: test lookup 
        shell: bash
        run: sudo nslookup mongo 
     
      - name: initialize replica set (from second container)
        shell: bash
        run: |
           sleep 5 # Give mongo a chance to start up
           docker run --rm --network mongo-network  mongo:8.0 mongosh -u admin -p basic --host s1.mongo.infrastructure.docker   --eval 'rs.initiate({_id: "Workflow", members: [{_id: 0, host: "s1.mongo.infrastructure.docker:27017"}]})'

 #     - name: check mongo container status
 #       shell: bash
 #       run: |
 #         sleep 2
 #         docker logs mongo
      - name: Build test application
        run: dotnet build  "${{ github.workspace }}/ConsoleApp3.sln" 
      - name: Run test application
        shell: bash 
        run: cd ${{ github.workspace }}/ConsoleApp3/bin/Debug/net8.0 && dotnet ./ConsoleApp3.dll

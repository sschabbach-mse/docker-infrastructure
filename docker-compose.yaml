services:
  mongo:
      image: mongo
      container_name: mongo
      hostname: mongo
      ports:
        - 127.10.0.3:27017:27017
      environment:
        - MONGO_INITDB_ROOT_USERNAME=admin
        - MONGO_INITDB_ROOT_PASSWORD=basic
      entrypoint:
        - bash
        - -c
        - |
          openssl rand -base64 756 > /data/keyfile
          chmod 400 /data/keyfile
          chown 999:999 /data/keyfile
          exec docker-entrypoint.sh $$@
      command: ["mongod",  "--replSet", "Workflow", "--bind_ip", "localhost,mongo", "--keyFile", "/data/keyfile"]
  rabbitmq:
    image: rabbitmq:3.13.7
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - 5672:5672


      #networks:
      #  - mse-mongo
#  rabbitmq1:
#      image: rabbitmq:3-management
#      hostname: rabbitmq
#      environment:
#        - RABBITMQ_DEFAULT_USER=guest
#        - RABBITMQ_DEFAULT_PASS=guest
#        - RABBITMQ_DEFAULT_VHOST="/"
#      volumes:
#        - ./.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
#        #- ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
#        #- rabbitmq1-data:/var/lib/rabbitmq/
#        #- rabbitmq1-logs:/var/log/rabbitmq
#      #entrypoint: /usr/local/bin/cluster-entrypoint.sh
#  #    networks:
#  #      - mse-rabbit
#      ports:
#        - 8080:15672
#  mongo-1:
#    image: mongo
#    container_name: mongo-1
#    hostname: mongo1
#    ports:
#      - 27017:27017
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=example
#    volumes:
#      - mongo1-config:/etc/mongo
#    networks:
#      - mse-mongo
#    depends_on:
#      dummy:
#        condition: service_completed_successfully
#    command: ["mongod", "--replSet", "rs0", "--bind_ip", "localhost,mongo-1", "--keyFile", "/etc/mongo/keyfile"]
#
#  mongo-2:
#    image: mongo
#    container_name: mongo-2
#    hostname: mongo2
#    ports:
#      - 27018:27017
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=example
#    volumes:
#      - mongo2-config:/etc/mongo
#    networks:
#      - mse-mongo
#    depends_on:
#      dummy:
#        condition: service_completed_successfully
#    command: ["mongod", "--replSet", "rs0", "--bind_ip", "localhost,mongo-2", "--keyFile", "/etc/mongo/keyfile"]
#
#  rabbitmq1:
#    image: rabbitmq:3-management
#    hostname: rabbitmq1
#    environment:
#      - RABBITMQ_DEFAULT_USER=guest
#      - RABBITMQ_DEFAULT_PASS=guest
#      - RABBITMQ_DEFAULT_VHOST="/"
#    volumes:
#      - ./.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
#      - ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
#      - rabbitmq1-data:/var/lib/rabbitmq/
#      - rabbitmq1-logs:/var/log/rabbitmq
#    entrypoint: /usr/local/bin/cluster-entrypoint.sh
#    networks:
#      - mse-rabbit
#    ports:
#      - 8080:15672
#
#  rabbitmq2:
#    image: rabbitmq:3-management
#    hostname: rabbitmq2
#    depends_on:
#      - rabbitmq1
#    environment:
#      - JOIN_CLUSTER_HOST=rabbitmq1
#    volumes:
#      - ./.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
#      - ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
#      - rabbitmq2-data:/var/lib/rabbitmq/
#      - rabbitmq2-logs:/var/log/rabbitmq
#    entrypoint: /usr/local/bin/cluster-entrypoint.sh
#    networks:
#      - mse-rabbit
#  rabbitmq3:
#    image: rabbitmq:3-management
#    hostname: rabbitmq3
#    depends_on:
#      - rabbitmq1
#    environment:
#      - JOIN_CLUSTER_HOST=rabbitmq1
#    volumes:
#      - ./.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
#      - ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
#      - rabbitmq3-data:/var/lib/rabbitmq/
#      - rabbitmq3-logs:/var/log/rabbitmq
#    entrypoint: /usr/local/bin/cluster-entrypoint.sh
#    networks:
#      - mse-rabbit
#  configurationservice:
#    image:  configurationserviceappweb:dev
#    container_name: configuration-service
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#      - ASPNETCORE_HTTP_PORTS=8080
#      - ASPNETCORE_HTTPS_PORTS=8081
#    ports:
#      - "8080"
#      - "8081"
#    volumes:
#      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
#      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
#      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
#      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
#    entrypoint: ["dotnet", "/app/bin/Release/net8.0/ConfigurationService.App.Web.dll"]
#
#  dummy:
#    image: debian
#    volumes:
#      - mongo1-config:/home/mongo1
#      - mongo2-config:/home/mongo2
#    entrypoint: ["bash", "-c", "chmod 400 /home/mongo1/keyfile && chown 999:999 /home/mongo1/keyfile &&  chmod 400 /home/mongo2/keyfile && chown 999:999 /home/mongo2/keyfile"]
#  mongo-setup:
#    image: mongo:7
#    depends_on:
#      - mongo-1
#      - mongo-2
#    volumes:
#      - ./init-mongo.sh:/scripts/init-mongo.sh
#    entrypoint: ["bash", "-c", "sleep 10 && mongosh --host mongo1:27017 < /scripts/init-mongo.sh"]
#
#volumes:
#  mongo1-config:
#    name: "mongo1-config"
#    external: true
#  mongo2-config:
#    name: "mongo2-config"
#    external: true
#  rabbitmq1-data:
#  rabbitmq1-logs:
#  rabbitmq2-data:
#  rabbitmq2-logs:
#  rabbitmq3-data:
#  rabbitmq3-logs:
#
#networks:
#  mse-rabbit:
#  mse-mongo:
